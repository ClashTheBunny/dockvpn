#!/bin/bash
set -e

[ -d /dev/net ] ||
    mkdir -p /dev/net
[ -c /dev/net/tun ] ||
    mknod /dev/net/tun c 10 200

cd /usr/share/easy-rsa/

export EASY_RSA="`pwd`"
export OPENSSL="openssl"
export PKCS11TOOL="pkcs11-tool"
export GREP="grep"
export KEY_CONFIG="$EASY_RSA/openssl-1.0.0.cnf"
export KEY_DIR="/etc/openvpn/keys"
export PKCS11_MODULE_PATH="dummy"
export PKCS11_PIN="dummy"

export KEY_SIZE=${KEY_SIZE:-2048}
export CA_EXPIRE=${CA_EXPIRE:-3650}
export KEY_EXPIRE=${KEY_EXPIRE:-3650}
export KEY_COUNTRY="${KEY_COUNTRY:-US}"
export KEY_PROVINCE="${KEY_PROVINCE:-CA}"
export KEY_CITY="${KEY_CITY:-SanFrancisco}"
export KEY_ORG="${KEY_ORG:-Fort-Funston}"
export KEY_EMAIL="${KEY_EMAIL:-me@myhost.mydomain}"
export KEY_OU="${KEY_OU:-MyOrganizationalUnit}"
export KEY_NAME="${KEY_NAME:-EasyRSA}"
export SERVERNAME="${SERVERNAME:-dockvpn}"
export CLIENTNAMES="${CLIENTNAMES:-clash}"

[ -d $KEY_DIR ] ||
    ./clean-all

[ -f $KEY_DIR/ca.crt ] ||
    "$EASY_RSA/pkitool" --initca
[ -f $KEY_DIR/${SERVERNAME}.crt ] ||
    "$EASY_RSA/pkitool" --server "${SERVERNAME}"
[ -f $KEY_DIR/dh${KEY_SIZE}.pem ] ||
    ./build-dh
[ -f $KEY_DIR/ta.key ] ||
    openvpn --genkey --secret $KEY_DIR/ta.key

for CLIENTNAME in $CLIENTNAMES
do
    [ -f $KEY_DIR/${CLIENTNAME}.key ] ||
        "$EASY_RSA/pkitool" "${CLIENTNAME}"
#    [ -f $KEY_DIR/${CLIENTNAME}.p12 ] ||
#        $OPENSSL pkcs12 -export -inkey $KEY_DIR/$CLIENTNAME.key -in $KEY_DIR/$CLIENTNAME.crt -certfile $KEY_DIR/ca.crt -out $KEY_DIR/$CLIENTNAME.p12 -password pass:""
done

cd /etc/openvpn
SERVER_TCP_PORT=${SERVER_TCP_PORT:-443}
SERVER_UDP_PORT=${SERVER_UDP_PORT:-1194}

[ -f server.udp.conf ] || cat >server.udp.conf <<EOF
mode server
tls-server
port ${SERVER_UDP_PORT}
proto udp
dev tun
persist-key
persist-tun
ca keys/ca.crt
cert keys/${SERVERNAME}.crt
key keys/${SERVERNAME}.key  # This file should be kept secret
dh keys/dh${KEY_SIZE}.pem
tls-auth keys/ta.key 0 # This file is secret
cipher BF-CBC        # Blowfish (default)
comp-lzo
topology subnet
server 192.168.255.128 255.255.255.128
ifconfig-pool-persist ipp.udp.txt
push "dhcp-option DNS 8.8.8.8"
push "redirect-gateway def1 bypass-dhcp"
max-clients 20
client-to-client
user nobody
group nogroup
keepalive 10 120
status openvpn-status.udp.log
verb 3
EOF



[ -f server.tcp.conf ] || cat >server.tcp.conf <<EOF
mode server
tls-server
port ${SERVER_TCP_PORT}
proto tcp
dev tun
persist-key
persist-tun

ca keys/ca.crt
cert keys/${SERVERNAME}.crt
key keys/${SERVERNAME}.key  # This file should be kept secret
dh keys/dh${KEY_SIZE}.pem
tls-auth keys/ta.key 0 # This file is secret

cipher BF-CBC        # Blowfish (default)
comp-lzo
topology subnet
server 192.168.255.0 255.255.255.128
ifconfig-pool-persist ipp.tcp.txt
push "dhcp-option DNS 8.8.8.8"
push "redirect-gateway def1 bypass-dhcp"
max-clients 20 
client-to-client
user nobody
group nogroup
keepalive 10 120
status openvpn-status.tcp.log
verb 3
EOF

ping -c 1 -n $SERVERNAME && MY_IP_ADDR=$SERVERNAME
[ "$MY_IP_ADDR" ] || {
  MY_IP_ADDR=${MY_IP_ADDR:-$(curl -s http://myip.enix.org/REMOTE_ADDR)}
  [ "$MY_IP_ADDR" ] || {
    echo "Sorry, I could not figure out my public IP address."
    echo "(I use ether $SERVERNAME or http://myip.enix.org/REMOTE_ADDR/"
    echo "for that purpose.)"
    exit 1
  }
}

for CLIENTNAME in $CLIENTNAMES
do
[ -f client.${CLIENTNAME}.ovpn ] || { cat >client.${CLIENTNAME}.combined.ovpn <<EOF
client
dev tun
nobind
resolv-retry infinite
persist-key
persist-tun

cipher BF-CBC
comp-lzo
passtos
mssfix
verb 3

redirect-gateway def1

<connection>
remote $MY_IP_ADDR ${SERVER_UDP_PORT} udp
</connection>

<connection>
remote $MY_IP_ADDR ${SERVER_TCP_PORT} tcp-client
</connection>
EOF

cp client.${CLIENTNAME}.combined.ovpn client.${CLIENTNAME}.ovpn

cat >>client.${CLIENTNAME}.ovpn<<EOF

ca ca.crt
cert ${CLIENTNAME}.crt
key ${CLIENTNAME}.key
tls-auth ta.key 1
EOF

cat >>client.${CLIENTNAME}.combined.ovpn<<EOF
<key>
`cat keys/$CLIENTNAME.key`
</key>
<cert>
`cat keys/$CLIENTNAME.crt`
</cert>
<ca>
`cat keys/ca.crt`
</ca>
<dh>
`cat keys/dh${KEY_SIZE}.pem`
</dh>

EOF
}

[ -d ${CLIENTNAME}.tblk ] || {
    mkdir ${CLIENTNAME}.tblk
    mv client.${CLIENTNAME}.ovpn keys/$CLIENTNAME.key keys/$CLIENTNAME.crt keys/ca.crt keys/dh${KEY_SIZE}.pem keys/ta.key ${CLIENTNAME}.tblk
    zip -r ${CLIENTNAME}.tblk.zip ${CLIENTNAME}.tblk
    zip -jr ${CLIENTNAME}.zip ${CLIENTNAME}.tblk
}

[ -f client.${CLIENTNAME}.http ] || cat >client.${CLIENTNAME}.http <<EOF
HTTP/1.0 200 OK
Content-Type: application/x-openvpn-profile
Content-Length: `wc -c client.${CLIENTNAME}.combined.ovpn`

`cat client.${CLIENTNAME}.combined.ovpn`
EOF

done

iptables -t nat -A POSTROUTING -s 192.168.255.0/24 -o eth0 -j MASQUERADE

touch tcp.log udp.log http8080.log
while true ; do openvpn server.tcp.conf; done >> tcp.log &
while true ; do openvpn server.udp.conf; done >> udp.log &
tail -F *.log
